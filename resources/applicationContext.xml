<?xml version="1.0" encoding="UTF-8"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<!-- 设置连接数据库的驱动、URL、用户名、密码 连接池最大连接数、最小连接数、初始连接数等参数 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://169.169.43.85:3306/ForensicLion" p:user="mysql"
		p:password="mysql" p:maxPoolSize="40" p:minPoolSize="1"
		p:initialPoolSize="1" p:maxIdleTime="20" />

	<!-- 定义Hibernate的SessionFactory -->
	<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>cn/sunn/forensiclion/domain/User.hbm.xml</value>
				<value>cn/sunn/forensiclion/domain/Dictionary.hbm.xml</value>
				<value>cn/sunn/forensiclion/domain/UsermanageHis.hbm.xml</value>
				<value>cn/sunn/forensiclion/domain/MFile.hbm.xml</value>
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<!-- 指定数据库方言、是否自动建表 是否生成SQL语句等 -->
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=true
				#开启二级缓存
				hibernate.cache.use_second_level_cache=true
				#设置二级缓存的提供者
				hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
			</value>
		</property>
	</bean>


	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
	<!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现 -->
	<!-- 并注入SessionFactory的引用 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<!-- 定义业务逻辑组件模板 -->
	<!-- 为之注入DAO组件 -->
	<bean id="userTemplate" abstract="true" lazy-init="true"
		p:userdao-ref="userDao" />
	<bean id="dictionaryTemplate" abstract="true" lazy-init="true"
		p:dictionarydao-ref="dictionaryDao" />
	<bean id="fileTemplate" abstract="true" lazy-init="true"
		p:filedao-ref="fileDao" />
	<bean id="caseinforTemplate" abstract="true" lazy-init="true"
		p:caseinfordao-ref="caseinforDao" />

	<!-- 定义业务逻辑组件，继承业务逻辑组件的模板 -->
	<bean id="userMgr" class="cn.sunn.forensiclion.service.impl.UserManagerImpl"
		parent="userTemplate" />
	<bean id="dictmgr" class="cn.sunn.forensiclion.service.impl.DictionaryManagerImpl"
		parent="dictionaryTemplate" />
	<bean id="filemgr" class="cn.sunn.forensiclion.service.impl.FileManagerImpl"
		parent="fileTemplate" />
	<bean id="caseinformgr" class="cn.sunn.forensiclion.service.impl.CaseInforManagerImpl"
		parent="caseinforTemplate" />


	<bean id="userDaohibernate" class="cn.sunn.forensiclion.dao.impl.UserDAOHibernate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
</beans>